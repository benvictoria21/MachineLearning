{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"SentimentAnalysis.py ","provenance":[],"private_outputs":true,"collapsed_sections":[],"authorship_tag":"ABX9TyMDTm/P8huj7FGd8/jnV5jr"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"6WgTYT7njpTj","colab_type":"code","colab":{}},"source":["import pandas as pd\n","import nltk\n","import re\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from nltk.stem.snowball import SnowballStemmer\n","import string\n","from nltk.corpus import stopwords\n","from nltk.corpus import opinion_lexicon\n","from nltk.tokenize import treebank\n","from sklearn.cluster import KMeans\n","import numpy as np"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"gSsk8goTjugu","colab_type":"code","colab":{}},"source":["stemmer = SnowballStemmer(\"english\")\n","reviem = []\n","category_list = []\n","nopunc = []\n","removStopwords = []\n","sentime_score=[]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"CSRYOwpMmWLF","colab_type":"code","colab":{}},"source":["\n","!mv Clu*/* ."],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"hnNx98tBlnby","colab_type":"code","colab":{}},"source":["# review_collection : is the data frame which contains all the reviews scraped from the tripadvisor\n","review_collection=pd.read_csv(\"review_collection.csv\",low_memory=False,encoding = \"latin1\")\n","review_collection_array=review_collection.values\n","review=review_collection_array[:,3]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"_kS-asihnJLm","colab_type":"code","colab":{}},"source":["def tokenize_and_stem(text):\n","    # first tokenize by sentence, then by word to ensure that punctuation is caught as it's own token\n","    tokens = [word for sent in nltk.sent_tokenize(text) for word in nltk.word_tokenize(sent)]\n","    filtered_tokens = []\n","    # filter out any tokens not containing letters (e.g., numeric tokens, raw punctuation)\n","    for token in tokens:\n","        if re.search('[a-zA-Z]', token):\n","            filtered_tokens.append(token)\n","    stems = [stemmer.stem(t) for t in filtered_tokens]\n","    return stems"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"_JYZyj5inOX8","colab_type":"code","colab":{}},"source":["def analyzesentiment(sentence):\n","    tokenizer = treebank.TreebankWordTokenizer()\n","    pos_words = 0\n","    neg_words = 0\n","    tokenized_sent = [word.lower() for word in tokenizer.tokenize(sentence)]\n","    keyword=[]\n","    for word in tokenized_sent:\n","        if word in opinion_lexicon.positive():\n","            pos_words += 1\n","            keyword.append(word)\n","        else:\n","            neg_words += 1\n","            keyword.append(word)\n","    if pos_words > neg_words:\n","        return('Positive',pos_words,neg_words,keyword)\n","    elif pos_words < neg_words:\n","        return('Negative',pos_words,neg_words,keyword)\n","    elif pos_words == neg_words:\n","        return('Neutral',pos_words,neg_words,keyword)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"i4M_SGdonj0Q","colab_type":"code","colab":{}},"source":["ranks = []\n","for i in range(0,len(removStopwords)):\n","    ranks.append(i)"],"execution_count":0,"outputs":[]}]}